<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:component-scan base-package="com.yatang.xc.xcr.web" />

	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 用户、角色、权限许可的数据信息 -->
	<bean id="customShiroReam1" class="com.yatang.xc.xcr.web.shiro.CustomShiroReam">
		<!-- <property name="credentialsMatcher" ref="credentialsMatcher" /> -->
	</bean>

	<!-- 缓存管理 -->
	<bean id="cacheManager" class="com.yatang.xc.mbd.web.shiro.RedisCacheManager"></bean>
	<bean id="sessionDAO" class="com.yatang.xc.mbd.web.shiro.RedisSessionDAO"/>
	<bean id="sessionFactory" class="com.yatang.xc.mbd.web.shiro.MySimpleSessionFactory"/>
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- Shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customShiroReam1"></property>
		<property name="cacheManager" ref="cacheManager"></property>
		<!-- <property name="rememberMeManager" ref="rememberMeManager" /> -->
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 用户、角色、权限许可的数据信息 -->
	<bean id="systemLogoutFilter" class="com.yatang.xc.mbd.web.shiro.SystemLogoutFilter"></bean>


	<!-- Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 Web应用中，
	     Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="com.yatang.xc.xcr.web.shiro.ShiroPermissionFactory">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/System/Login.htm"></property>
		<!-- 登录成功跳转地址 
		<property name="successUrl" value="/main.htm" />-->
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="/User/permisErro.htm"></property>
		<property name="filters">
			<map>
				<!--退出过滤器-->
				<entry key="logout" value-ref="systemLogoutFilter" />
			</map>
		</property>

		<property name="filterChainDefinitions">
			<value>
				/System/**=anon
			</value>
		</property>
	</bean>

	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1"/>
		<property name="domain" value="${main.domain.name}"/>
	</bean>
	<!-- 
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean> -->

	<!--   
       开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，  
       并在必要时进行安全逻辑验证  
    -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
</beans>
